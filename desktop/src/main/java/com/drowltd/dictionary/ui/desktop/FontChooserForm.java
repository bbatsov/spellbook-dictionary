package com.drowltd.dictionary.ui.desktop;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.util.prefs.Preferences;

/**
 * Simple font chooser form.
 * <p/>
 * User: bozhidar
 * Date: Oct 23, 2009
 * Time: 10:04:46 PM
 */
public class FontChooserForm {
    private JPanel panel1;
    private JList fontList;
    private JList fontSizeList;
    private JCheckBox boldCheckBox;
    private JCheckBox italicCheckBox;
    private JLabel previewLabel;

    private Font selectedFont;

    public FontChooserForm() {
        Preferences preferences = Preferences.userNodeForPackage(SpellbookApp.class);

        String[] availableFonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fontList.setListData(availableFonts);

        // select the current font
        String selectedFontName = preferences.get("FONT_NAME", "Serif");
        fontList.setSelectedValue(selectedFontName, true);

        fontList.addListSelectionListener(new SelectionUpdater());

        fontSizeList.setListData(new Integer[]{8, 10, 12, 14, 16, 18});

        int currentFontSize = preferences.getInt("FONT_SIZE", 12);
        fontSizeList.setSelectedValue(currentFontSize, true);

        fontSizeList.addListSelectionListener(new SelectionUpdater());

        int currentFontStyle = preferences.getInt("FONT_STYLE", Font.PLAIN);

        if ((currentFontStyle & Font.BOLD) == Font.BOLD) {
            boldCheckBox.setSelected(true);
        }

        if ((currentFontStyle & Font.ITALIC) == Font.ITALIC) {
            italicCheckBox.setSelected(true);
        }

        boldCheckBox.addChangeListener(new SelectionUpdater());
        italicCheckBox.addChangeListener(new SelectionUpdater());

        previewLabel.setFont(generateFont());
    }

    private Font generateFont() {
        String fontName = (String) fontList.getSelectedValue();

        Integer sizeInt = (Integer) fontSizeList.getSelectedValue();

        selectedFont = new Font(fontName,
                (italicCheckBox.isSelected() ? Font.ITALIC : Font.PLAIN)
                        | (boldCheckBox.isSelected() ? Font.BOLD : Font.PLAIN),
                sizeInt);

        return selectedFont;
    }

    public Font getSelectedFont() {
        return selectedFont;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:80dlu:grow,left:4dlu:noGrow,fill:134px:grow", "center:d:noGrow,top:4dlu:noGrow,center:d:grow,top:5dlu:noGrow,center:max(d;10dlu):noGrow,top:4dlu:noGrow,center:max(d;10dlu):noGrow"));
        final JLabel label1 = new JLabel();
        label1.setText("Font");
        CellConstraints cc = new CellConstraints();
        panel1.add(label1, cc.xy(1, 1));
        final JLabel label2 = new JLabel();
        label2.setText("Size");
        panel1.add(label2, cc.xy(3, 1));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, cc.xy(1, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        fontList = new JList();
        scrollPane1.setViewportView(fontList);
        final JScrollPane scrollPane2 = new JScrollPane();
        panel1.add(scrollPane2, cc.xy(3, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        fontSizeList = new JList();
        scrollPane2.setViewportView(fontSizeList);
        previewLabel = new JLabel();
        previewLabel.setText("The quick brown fox jumps over the lazy dog");
        panel1.add(previewLabel, cc.xyw(1, 7, 3));
        boldCheckBox = new JCheckBox();
        boldCheckBox.setText("Bold");
        panel1.add(boldCheckBox, cc.xy(1, 5));
        italicCheckBox = new JCheckBox();
        italicCheckBox.setText("Italic");
        panel1.add(italicCheckBox, cc.xy(3, 5));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private class SelectionUpdater implements ChangeListener, ListSelectionListener {
        public void valueChanged(ListSelectionEvent e) {
            previewLabel.setFont(generateFont());
        }

        public void stateChanged(ChangeEvent e) {
            previewLabel.setFont(generateFont());
        }
    }

    public JComponent getComponent() {
        return panel1;
    }
}
